{"version":3,"sources":["Components/Header.jsx","Components/BodyCard.jsx","Components/Info.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","onClick","swal","buttons","timer","BodyCard","React","useState","petition","setPetition","response","a","fetch","then","res","json","data","console","log","info","name","results","first","last","gender","number","phone","nat","email","pic","picture","large","age","dob","date","offset","location","timezone","street","city","state","catch","e","useEffect","style","height","maxWidth","src","alt","Info","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dde7ed3.chunk.js","sourcesContent":["import React from \"react\";\nimport swal from \"sweetalert\"\n\nconst Header = () => {\n\n\tconst handleClick = () => {\n\t\tswal(\"Simple User Card Generator v1.0.0\", \"Nothing... Else\", \"success\", {\n\t\t\tbuttons: false,\n\t\t\ttimer: 1500\n\t\t})\n\t}\n\n\treturn(\n\t\t<div className=\"d-block w-100 bg-success p-3 d-flex flex-row justify-content-between\">\n\t\t\t<span className=\"p-2 bg-light fw-bold text-success fs-5\">User Card Generator</span>\n\t\t\t<button onClick={handleClick} className=\"btn btn-light text-success btn-block fw-bold\">Version!</button>\n\t\t</div>\n\t)\n}\n\nexport default Header;\n","import React from \"react\"\n\nconst BodyCard = () => {\n\n\tconst [petition, setPetition] = React.useState([]);\n\n\tconst response = async () => {\n\t\tawait fetch(\"https://randomuser.me/api/\")\n\t\t\t.then(res => {\n\t\t\t\treturn res.json()\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data)\n\t\t\t\tconst info = {\n\t\t\t\t\tname: data.results[0].name.first,\n\t\t\t\t\tlast: data.results[0].name.last,\n\t\t\t\t\tgender: data.results[0].gender,\n\t\t\t\t\tnumber: data.results[0].phone,\n\t\t\t\t\tnat: data.results[0].nat,\n\t\t\t\t\temail: data.results[0].email,\n\t\t\t\t\tpic: data.results[0].picture.large,\n\t\t\t\t\tage: data.results[0].dob.age,\n\t\t\t\t\tdate: data.results[0].dob.date,\n\t\t\t\t\toffset: data.results[0].location.timezone.offset,\n\t\t\t\t\tlocation: `${data.results[0].location.street.name}, ${data.results[0].location.city} & ${data.results[0].location.state}`\n\t\t\t\t}\n\t\t\t\tsetPetition(info);\n\t\t\t})\n\t\t\t.catch(e => console.log(e))\n\t}\n\n\tReact.useEffect(() => {\n\t\t\tresponse();\n\t\treturn () => {}\n\t}, []);\n\n\treturn(\n\t\t<div className=\"d-flex flex-column justify-content-center align-items-center bg-dark \" style={{height: \"62vh\"}}>\n\t\t\t<h2 className=\"display-6 my-4 fw-bold text-light\"> User Card!</h2>\n\n\t\t\t<div className=\"card mb-3 border border-4\" style={{maxWidth: \"600px\"}}>\n\t  \t\t\t<div className=\"row g-0\">\n\t    \t\t\t<div className=\"col-md-4\">\n\t      \t\t\t\t<img src={petition.pic} className=\"img-fluid w-100\" alt=\"...\" />\n\t    \t\t\t</div>\n\t    \t\t\t<div className=\"col-md-8\">\n\t      \t\t\t\t<div className=\"card-body\">\n\t        \t\t\t\t<h5 className=\"card-title\">{petition.name} {petition.last}</h5>\n\t\t\t\t\t        <p className=\"card-text my-4\">My gender is: {petition.gender}, my number: {petition.number}, My nationality is {petition.nat}.</p>\n\t\t\t\t\t        <p className=\"card-text text-muted\">Oh! My Email is: {petition.email}</p>\n\t\t\t\t\t    </div>\n\t   \t\t\t \t</div>\n\t   \t\t\t \t<div className=\"col-md-4 bg-success text-light text-align-center\">\n\t      \t\t\t\t<div className=\"card-body\">\n\t        \t\t\t\t<h5 className=\"card-title\">I have: {petition.age} years old</h5>\n\t\t\t\t\t        <p className=\"card-text my-4\">My date is: {petition.date}</p>\n\t\t\t\t\t    </div>\n\t   \t\t\t </div>\n\t   \t\t\t <div className=\"col-md-8 bg-success text-light\">\n\t      \t\t\t\t<div className=\"card-body\">\n\t        \t\t\t\t<h6 className=\"card-title\">This is my timezone: {petition.offset}</h6>\n\t\t\t\t\t        <p className=\"card-text my-4\">And my location: {petition.location}.</p>\n\t\t\t\t\t        <div className=\"d-flex flex-row align-items-center justify-content-center\">\n\t\t\t\t\t        \t<button className=\"btn btn-light text-align-center\" onClick={response}>Change!</button>\n\t\t\t\t\t        </div>\n\t\t\t\t\t    </div>\n\t   \t\t\t </div>\n\t  \t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default BodyCard;\n","import React from \"react\";\n\nconst Info = () => {\n\treturn(\n\t\t<div className=\"container d-flex flex-column text-center align-items-center justify-content-center my-4\">\n\t\t\t<h1 className=\"my-4 fw-bold\"> Info of the App!</h1>\n\t\t\t<br />\n\t\t\t<p className=\"w-50\"> This App was created to help some people that, don't have imagination to create false information of people, for example,\n\t\t\tDatabases practices, to Create Apis, or another way... You don't give me thanks about this, enjoy! </p>\n\t\t</div>\n\t)\n}\n\nexport default Info;","//importing Components\nimport Header from \"./Components/Header\"\nimport BodyCard from \"./Components/BodyCard\"\nimport Info from \"./Components/Info\"\n\n//importing css, in this case, we use Bootstrap\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <BodyCard />\n      <Info />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}